name: Classification CI

on:
  push:
    branches: [master]
    paths: ["classification/**"]
  pull_request:
    branches: [master]
    paths: ["classification/**"]

jobs:
  linting:
    name: Check linting
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: GitHub Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        working-directory: classification/
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flake8 linting
        working-directory: classification/
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    name: Run all python unittests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: GitHub Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        working-directory: classification/
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run DataGenerator unit tests
        working-directory: classification/
        run: |
          python -m test.data_generator

  run:
    name: Run the main notebook
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: GitHub Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        working-directory: classification/
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ipython

      - name: Execute the notebook
        working-directory: classification/
        run: |
          jupyter nbconvert --to python YOLO_Traffic_classification.ipynb
          ipython3 YOLO_Traffic_classification.py
